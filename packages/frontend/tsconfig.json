{
    "compilerOptions": {
        "esModuleInterop": true,
        "module": "ESNext",
        "moduleResolution": "bundler",
        "isolatedModules": false,
        "noEmit": true,
        "baseUrl": ".",
        "resolveJsonModule": true,
        "skipLibCheck": true,
        "skipDefaultLibCheck": true,
        "sourceMap": true,
        "forceConsistentCasingInFileNames": true,
        "useDefineForClassFields": true,
        "jsx": "preserve",
        "lib": [
            "esnext",
            "dom"
        ],
        "target": "ESNext",
        "types": [],
        "paths": {
            "src/*": [
                "src/*"
            ]
        },
        "strict": true,
        "noImplicitAny": true,
        /* Enable error reporting for expressions and declarations with an implied `any` type.. */
        "strictNullChecks": true,
        /* When type checking, take into account `null` and `undefined`. */
        "strictFunctionTypes": true,
        /* When assigning functions, check to ensure parameters and the return values are subtype-compatible. */
        "strictBindCallApply": true,
        /* Check that the arguments for `bind`, `call`, and `apply` methods match the original function. */
        "strictPropertyInitialization": true,
        /* Check for class properties that are declared but not set in the constructor. */
        "noImplicitThis": true,
        /* Enable error reporting when `this` is given the type `any`. */
        "useUnknownInCatchVariables": true,
        /* Type catch clause variables as 'unknown' instead of 'any'. */
        // "alwaysStrict": true,                             /* Ensure 'use strict' is always emitted. */
        "noUnusedLocals": true,
        /* Enable error reporting when a local variables aren't read. */
        "noUnusedParameters": true,
        /* Raise an error when a function parameter isn't read */
        "exactOptionalPropertyTypes": true,
        /* Interpret optional property types as written, rather than adding 'undefined'. */
        "noImplicitReturns": true,
        /* Enable error reporting for codepaths that do not explicitly return in a function. */
        "noFallthroughCasesInSwitch": true,
        /* Enable error reporting for fallthrough cases in switch statements. */
        // "noUncheckedIndexedAccess": true,                 /* Include 'undefined' in index signature results */
        "noImplicitOverride": true
        /* Ensure overriding members in derived classes are marked with an override modifier. */
    },
    "include": [
        "src"
    ],
    "exclude": [
        "src-pwa",
        "dist",
        ".quasar",
        "node_modules",
        "src/**/*.spec.ts",
        "vitest.config.ts"
    ],
    "references": [
        {
            "path": "../backend"
        },
        {
            "path": "../floor-creator"
        },
        {
            "path": "../types"
        }
    ]
}
